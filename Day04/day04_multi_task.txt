多任务编程

    意义:
        充分利用计算机资源提高程序的运行效率

    定义:
        通过一定的编程手段,在一个程序运行中可以同时利用计算机完成多个任务,
        以此提高程序运行效率

    实现方案:
        多进程  多线程

    并发 ： 
        同时处理多个任务，内核在多个任务间不断的切换，
        达到好像都在处理运行的效果。但实际一个时间点内核只能处理其中一个任务。

    并行 ： 
        多个计算机核心在同时处理多个任务，这时多个任务间是并行关系。




进程(Process)

    定义:
        程序在计算机中的一次运行过程

    程序:
        是一个可执行的文件, 是静态的占有磁盘空间

    进程:
        进程是一个动态的过程,占有计算机资源,有一定生命周期

    进程的诞生:
        1.用户空间通过调用程序接口或者命令发起进程创建请求
        2.操作系统接受用户请求,开始创建进程
        3.操作系统分配计算机资源,确定进程状态,开辟空间等
        4.操作系统将创建的进程提供给用户使用

    一些概念:

        CPU时间片:
            如果一个进程占有CPU内核,则称这个进程在cpu时间片上

        PCB-Process Control Block 进程控制块:
            在内存中开辟的一块空间,存放进程的基本信息

        进程ID(PID):
            系统为进程分配的ID号,每个进程不重复(大于0的整数)
                命令:
                    ps -aux

        父子进程:
            系统中每一个进程都有唯一的父进程,可以有多个或零个子进程,
            这样形成父子进程关系

            查看命令:
                pstree

    进程状态:

        三态:
            就绪态
                进程具备执行条件,等待系统分配CPU资源
            运行态
                进程占有CPU时间片正在运行
            等待态
                进程暂时阻塞不具备执行条件
        
        五态:
            新建态
                创建一个新的进程,获取资源的过程

            就绪态
            运行态
            等待态

            终止态
                进程结束,释放资源的过程

        查看命令:
            ps -aix --> STAT列

            S   等待态
            D   等待态
            T   等待态
            R   运行态
            Z   僵尸进程

    进程优先级

        作用:
            决定进程的优先权限和占有资源的优先程度
        查看:
            top 动态查看进程优先级
        linux优先级范围:
            -20 - 19
            数越小,优先级越高

        制定优先级运行程序:
            nice -9 python3 while.py        以9的优先级运行
            nice --9 python3 while.py        以-9的优先级运行

        
            <   有较高的优先级
            N   有较低的优先级
            +   前台进程
            s   会话组组长
            l   有链接子进程 

    进程的特征:

        1.进程可以使用计算机的多核资源
        2.进程是计算机分配系统资源的最小单位
        3.进程之间运行互不影响,各自独立运行
        4.每个进程的空间独立,各占有自己的空间资源

    要求:
        1.什么是进程,进程和程序的区别
        2.进程的特征有那些
        3.进程都有呢些状态,各种状态如何转换


多进程编程

    import os
    pid = os.fork()

    功能:
        创建一个新的进程

    参数:  
        无

    返回值:
        失败:
            返回一个负数
        成功:
            在原进程 返回新进程的PID号
            在新进程 返回0
    注意:
        1.子进程会复制父进程的全部代码段和内存空间
        2.子进程从fork的下一句开始执行
        3.if elif else结构判断fork返回值的不同
            从而使父子进程执行不同的代码几乎是固定搭配
        4.父子进程各自独立运行,运行顺序不一定
        5.子进程有自己特有的内容比如 PID 进程控制块 命令集 等
作业:
    1.对进程中 要求的 理论问题总结
    2.整理网络编程知识点,回顾重点程序
    3.聊天室
        功能 ： 类似qq群聊
            1. 进入聊天室需要输入姓名，姓名不能重复
            2. 有人进入聊天室会向其他人发送通知
            xxx 进入了聊天室
            3. 一个人发消息，其他人会收到消息
            xxx 说 ： xxxxxxxx
            4. 某人退出聊天室，其他人也会收到通知
            xxx 退出了聊天
            5.管理员喊话群里都收到
                管理员说 :xxxxxxxx

    



